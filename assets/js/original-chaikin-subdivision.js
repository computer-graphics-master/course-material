define(['js/twgl','js/2d-boilerplate','js/sylvester','js/style','js/util'],function(a,b,c,d,e){'use strict';const f={ChaikinSubdivision(a,b){this.Program(this.render,{container:a,idPrefix:b,width:640,height:480}),this.points=[],this.curvePoints=[],this.isDragging=!1,this.isMouseJustPressed=!0,this.draggedPoint=null,this.pointCount=4,this.step=10},initDOM(){const a=this.settings.container;a.css('display','flex');const b=$('<span></span>');b.css('flex','1');const c=$('<div></div>');c.addClass('canvas-controller'),c.append(this.createNumberInput('L\xE9p\xE9sk\xF6z','step',10,5,40,'any',(a)=>this.changeStep(a))),b.append(c);const d=$('<span></span>');d.css('flex','2'),d.append(this.canvasMarkup()),a.append(b),a.append(d)},changeStep(a){const b=Number.parseFloat(a.target.value);Number.isNaN(b)||(this.step=b)},createNumberInput(a,b,c,d,e,f,g){const h=this.withPrefix(b),i=$('<span></span>');i.addClass('slider-container');const j=$(`<input type="range" value="${c}" min="${d}" max="${e}" id="${h}" name="${h}" step="${f}"/>`);j.on('input',g),i.append(`<span class="slider-min-label">${d}</span>`),i.append(j),i.append(`<span class="slider-max-label">${e}</span>`);const k=$('<div></div>');return k.addClass('controller-input-container'),k.append(`<label for="${h}">${a}</label>`),k.append(i),k},getClickedPoint(a){for(let b=0;b<this.points.length;++b)if(10>=this.points[b].distanceFrom(a))return this.points[b];return null},onMouseDown(a){this.isMouseJustPressed&&(this.draggedPoint=this.getClickedPoint(a),this.draggedPoint?this.isDragging=!0:this.points.push(a),this.isMouseJustPressed=!1)},onMouseUp(){this.isDragging=!1,this.draggedPoint=null,this.isMouseJustPressed=!0},onMouseMove(a){this.isDragging&&this.draggedPoint&&(this.draggedPoint.elements=a.elements)},halfChaikin(a){const b=a.map((a)=>a.dup()),c=[],d=[];let e=!1;do e||(c.push(b[2].dup()),c.push(b[3].dup()),b[3]=b[1].add(b[2]).multiply(0.5)),b[0].distanceFrom(b[3])<this.step?(d.push(b[3].dup()),b[0]=b[3].dup(),b[3]=c.pop(),b[1]=c.pop(),e=!0):(b[2]=b[1].add(b[3]).multiply(0.5),b[1]=b[1].add(b[0]).multiply(0.5),e=!1);while(0<c.length);return d},calculateCurve(){this.curvePoints=[this.points[0]];let a=this.points[0].dup();for(let b=0;b<this.points.length-3;++b){const c=this.halfChaikin([a,...this.points.slice(b+1,b+4)]);a=c[c.length-1],this.curvePoints=this.curvePoints.concat(c)}const b=this.points.slice(this.points.length-3);b.reverse();const c=this.halfChaikin([...b,a]);c.reverse(),this.curvePoints=this.curvePoints.concat(c),this.curvePoints.push(this.points[this.points.length-1])},render(){this.renderPoints(),this.points.length>=this.pointCount&&(this.calculateCurve(),this.renderCurve())},renderCurve(){const b={color:d.colors.curve},c={position:{numComponents:2,data:e.toPositionArray(this.curvePoints)}},f=a.createBufferInfoFromArrays(this.gl,c);a.setBuffersAndAttributes(this.gl,this.programInfo,f),a.setUniforms(this.programInfo,b),a.drawBufferInfo(this.gl,f,this.gl.LINE_STRIP)},renderPoints(){const b={color:d.colors.controlPolygon},c={position:{numComponents:2,data:[].concat.apply([],this.points.map((a)=>a.elements))}},e=a.createBufferInfoFromArrays(this.gl,c);a.setBuffersAndAttributes(this.gl,this.programInfo,e),a.setUniforms(this.programInfo,b),a.drawBufferInfo(this.gl,e,this.gl.LINE_STRIP),b.color=d.colors.controlPoint,a.setUniforms(this.programInfo,b),a.drawBufferInfo(this.gl,e,this.gl.POINTS)}};return Object.setPrototypeOf(f,b),function(a,b){const c=Object.create(f);c.ChaikinSubdivision(a,b),c.start(!1)}});